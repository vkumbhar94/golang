// Code generated by github.com/ecordell/optgen. DO NOT EDIT.
package funcopts

import (
	defaults "github.com/creasty/defaults"
	helpers "github.com/ecordell/optgen/helpers"
)

type RedisOption func(r *Redis)

// NewRedisWithOptions creates a new Redis with the passed in options set
func NewRedisWithOptions(opts ...RedisOption) *Redis {
	r := &Redis{}
	for _, o := range opts {
		o(r)
	}
	return r
}

// NewRedisWithOptionsAndDefaults creates a new Redis with the passed in options set starting from the defaults
func NewRedisWithOptionsAndDefaults(opts ...RedisOption) *Redis {
	r := &Redis{}
	defaults.MustSet(r)
	for _, o := range opts {
		o(r)
	}
	return r
}

// ToOption returns a new RedisOption that sets the values from the passed in Redis
func (r *Redis) ToOption() RedisOption {
	return func(to *Redis) {
		to.Addr = r.Addr
		to.Password = r.Password
		to.UserName = r.UserName
	}
}

// DebugMap returns a map form of Redis for debugging
func (r Redis) DebugMap() map[string]any {
	debugMap := map[string]any{}
	debugMap["Addr"] = helpers.DebugValue(r.Addr, false)
	debugMap["Password"] = helpers.SensitiveDebugValue(r.Password)
	debugMap["UserName"] = helpers.DebugValue(r.UserName, false)
	return debugMap
}

// RedisWithOptions configures an existing Redis with the passed in options set
func RedisWithOptions(r *Redis, opts ...RedisOption) *Redis {
	for _, o := range opts {
		o(r)
	}
	return r
}

// WithOptions configures the receiver Redis with the passed in options set
func (r *Redis) WithOptions(opts ...RedisOption) *Redis {
	for _, o := range opts {
		o(r)
	}
	return r
}

// WithAddr returns an option that can set Addr on a Redis
func WithAddr(addr string) RedisOption {
	return func(r *Redis) {
		r.Addr = addr
	}
}

// WithPassword returns an option that can set Password on a Redis
func WithPassword(password string) RedisOption {
	return func(r *Redis) {
		r.Password = password
	}
}

// WithUserName returns an option that can set UserName on a Redis
func WithUserName(userName string) RedisOption {
	return func(r *Redis) {
		r.UserName = userName
	}
}
